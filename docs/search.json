[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Using PyMC from clojure",
    "section": "",
    "text": "This is part of the Scicloj Clojure Data Tutorials.\n\n1 Preface\nThese tutorials demonstrate using the probabilistic programming library PyMC from Clojure.\n\nIntro\n\n\nsource: projects/stats/pymc/notebooks/index.clj",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  Intro",
    "section": "",
    "text": "2.1 Setup\nRelevant Clojure namespaces:\nRelevant Python modules:\nSome convenience functions to access Python idioms:\nTheme for ArViZ visualizations:",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Intro</span>"
    ]
  },
  {
    "objectID": "intro.html#setup",
    "href": "intro.html#setup",
    "title": "2  Intro",
    "section": "",
    "text": "(ns intro\n  (:require [libpython-clj2.require :refer [require-python]]\n            [libpython-clj2.python :refer [py. py.. py.-] :as py]\n            [fastmath.random :as random]\n            [tablecloth.api :as tc]\n            [tablecloth.column.api :as tcc]\n            [tech.v3.datatype :as dtype]\n            [scicloj.hanamicloth.v1.plotlycloth :as ploclo]\n            [scicloj.kind-pyplot.v1.api :as pyplot]\n            [scicloj.kindly.v4.kind :as kind]))\n\n\n\n(require-python '[builtins :as python]\n                'operator\n                '[arviz :as az]\n                '[arviz.style :as az.style]\n                '[pandas :as pd]\n                '[matplotlib.pyplot :as plt]\n                '[numpy :as np]\n                '[numpy.random :as np.random]\n                '[pymc :as pm])\n\n\n:ok\n\n\n\n(defn brackets [obj entry]\n  (py. obj __getitem__ entry))\n\n\n(def colon\n  (python/slice nil nil))\n\n\n\n(arviz.style/use \"arviz-darkgrid\")\n\n\nnil",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Intro</span>"
    ]
  },
  {
    "objectID": "intro.html#synthetic-data",
    "href": "intro.html#synthetic-data",
    "title": "2  Intro",
    "section": "2.2 Synthetic data",
    "text": "2.2 Synthetic data\n\n(def random-seed 8927)\n\n\n(def dataset-size 101)\n\n\n(def true-parameter-values\n  {:alpha 1\n   :sigma 1\n   :beta [1 2.5]})\n\nWe will generate a dataset by the following recipe:\n\n(defn gen-dataset [{:keys [size random-seed\n                           alpha sigma beta]}]\n  (let [rng (random/rng :isaac random-seed)]\n    (-&gt; {:x1 (take size (random/-&gt;seq rng))\n         :x2 (-&gt; (take size (random/-&gt;seq rng))\n                 (tcc/* 0.2))}\n        tc/dataset\n        (tc/add-column :y\n                       #(-&gt; (tcc/+ alpha\n                                   (tcc/* (beta 0) (:x1 %))\n                                   (tcc/* (beta 1) (:x2 %))\n                                   (tcc/* sigma\n                                          (dtype/make-reader\n                                           :float32 size (rand)))))))))\n\n\n(def dataset\n  (gen-dataset (merge {:random-seed random-seed\n                       :size dataset-size}\n                      true-parameter-values)))\n\n\n(tc/head dataset)\n\n\n_unnamed [5 3]:\n\n\n\n:x1\n:x2\n:y\n\n\n\n\n0.55055707\n0.12467207\n1.98179230\n\n\n0.33115609\n0.12809006\n1.80093476\n\n\n0.75138350\n0.16112505\n2.72032414\n\n\n0.84946778\n0.04481401\n2.45942292\n\n\n0.48675832\n0.13809987\n2.69449603\n\n\n\n\nLet us visualize our dataset:\n\n(-&gt;&gt; [:x1 :x2]\n     (mapv (fn [x]\n             (-&gt; dataset\n                 (ploclo/layer-point\n                  {:=x :x1}))))\n     kind/fragment)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Intro</span>"
    ]
  },
  {
    "objectID": "intro.html#using-pymc",
    "href": "intro.html#using-pymc",
    "title": "2  Intro",
    "section": "2.3 Using PyMC",
    "text": "2.3 Using PyMC\n\npm/__version__\n\n\n\"5.17.0\"\n\nLet us define a Bayesian model for our data:\n\n(def basic-model (pm/Model))\n\n\n(py/with [_ basic-model]\n         (let [{:keys [x1 x2 y]} (-&gt; dataset\n                                     (update-vals np/array))\n               alpha (pm/Normal \"alpha\"\n                                :mu 0\n                                :sigma 10)\n               beta (pm/Normal \"beta\"\n                               :mu 0\n                               :sigma 10\n                               :shape 2)\n               sigma (pm/HalfNormal \"sigma\"\n                                    :sigma 1)\n               mu (operator/add alpha\n                                (operator/mul (brackets beta 0)\n                                              x1)\n                                (operator/mul (brackets beta 0)\n                                              x2))\n               y_obs (pm/Normal \"y_obs\"\n                                :mu mu\n                                :sigma sigma\n                                :observed y)]))\n\n\nnil\n\nNow we can sample from the posterior:\n\n(def idata\n  (py/with [_ basic-model]\n           (pm/sample)))\n\nHere is the resulting structure:\n\n(-&gt; idata\n    (py.- posterior)\n    (py.- alpha)\n    (py. sel :draw (python/slice 0 4)))\n\n\n&lt;xarray.DataArray 'alpha' (chain: 4, draw: 5)&gt; Size: 160B\narray([[ -4.93451306, -20.81842896,  13.79591322,  -7.25864184,\n         13.20825391],\n       [  5.44197835,   5.98239631,   5.98239631,   3.78431927,\n          3.05035938],\n       [  7.85744438, -16.99150893, -23.73959874, -18.06038594,\n        -16.38016999],\n       [  1.46700144,   4.10029868,  14.09167963,  -1.5770081 ,\n         -7.26552011]])\nCoordinates:\n  * chain    (chain) int64 32B 0 1 2 3\n  * draw     (draw) int64 40B 0 1 2 3 4\n\nAlternativelty, we could also use the Slice sampling algorithm instead of the default NUTS.\n\n(def slice-idata\n  (py/with [_ basic-model]\n           (let [step (pm/Slice)]\n             (pm/sample 5000 :step step))))\n\n\nslice-idata\n\n\nInference data with groups:\n    &gt; posterior\n    &gt; sample_stats",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Intro</span>"
    ]
  },
  {
    "objectID": "intro.html#posterior-analysis",
    "href": "intro.html#posterior-analysis",
    "title": "2  Intro",
    "section": "2.4 Posterior analysis",
    "text": "2.4 Posterior analysis\nLet us plot our sampling using ArViZ:\n\n(pyplot/pyplot\n #(az/plot_trace idata :combined true))\n\n\n\n\n \n  \n   \n    \n    2024-10-11T16:04:08.184299\n    image/svg+xml\n    \n     \n      Matplotlib v3.9.2, https://matplotlib.org/\n     \n    \n   \n  \n \n \n  \n \n \n  \n   \n  \n  \n   \n    \n   \n   \n    \n     \n      \n     \n     \n     \n      \n      \n       \n        \n        \n        \n       \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n        \n       \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n        \n       \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n        \n       \n       \n       \n      \n     \n    \n   \n   \n   \n    \n     \n    \n    \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n     \n    \n    \n     \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n    \n     \n      \n      \n      \n      \n     \n     \n     \n     \n     \n     \n    \n   \n  \n  \n   \n    \n   \n   \n    \n     \n      \n     \n     \n     \n      \n      \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n        \n       \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n        \n       \n       \n       \n       \n      \n     \n    \n   \n   \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n      \n     \n    \n   \n   \n    \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n    \n     \n     \n     \n     \n     \n    \n   \n  \n  \n   \n    \n   \n   \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n      \n     \n    \n   \n   \n   \n    \n     \n     \n    \n   \n   \n    \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n     \n     \n    \n   \n   \n    \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n     \n    \n    \n     \n    \n   \n   \n    \n     \n    \n    \n     \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n    \n     \n      \n      \n      \n     \n     \n     \n     \n     \n    \n   \n  \n  \n   \n    \n   \n   \n    \n     \n      \n     \n     \n     \n      \n      \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n   \n   \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n      \n     \n    \n   \n   \n    \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n    \n     \n     \n     \n     \n    \n   \n  \n  \n   \n    \n   \n   \n    \n     \n      \n     \n     \n     \n      \n      \n       \n        \n       \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n        \n       \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n   \n   \n   \n    \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n     \n    \n    \n     \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n    \n     \n      \n      \n      \n      \n     \n     \n     \n     \n     \n     \n    \n   \n  \n  \n   \n    \n   \n   \n    \n     \n      \n     \n     \n     \n      \n      \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n       \n       \n      \n     \n    \n   \n   \n    \n     \n      \n     \n     \n     \n      \n      \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n      \n     \n    \n    \n     \n      \n     \n     \n     \n      \n      \n       \n      \n     \n    \n   \n   \n    \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n     \n     \n    \n   \n   \n    \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n   \n   \n    \n    \n     \n     \n     \n     \n     \n    \n   \n  \n \n \n  \n   \n  \n  \n   \n  \n  \n   \n  \n  \n   \n  \n  \n   \n  \n  \n   \n  \n \n\n\n\nsource: projects/stats/pymc/notebooks/intro.clj",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Intro</span>"
    ]
  }
]